trigger:
  batch: false
  branches:
    include:
      - develop #collaboration branch
      - main
  paths:
    include:
      - .pipelines/adf_deployment_pipeline.yml
      - data_ops/adf/*

pr:
  branches:
    include:
    - main
    - develop
  paths:
    include: 
      - data_ops/adf

pool:
  vmImage: 'ubuntu-latest'


variables:
  # - ${{ if eq(variables['build.SourceBranchName'], 'develop') }}:
  #     - group: demo
      
  # - ${{ if eq(variables['build.SourceBranchName'], 'main') }}:
  - group: demo1



stages:
  - stage: Validate_ADF_Code
    jobs:
    - job: Build_Adf_Arm_Templates
      displayName: 'Generate ADF Artifacts'
      steps:

      - bash: az --version
        displayName: 'Show Azure CLI version'

      # - task: AzureCLI@2
      #   inputs:
      #     azureSubscription: 'drobbins-shg-manjsin (a6ec3340-794a-4552-9c76-a5c37e3d0c2b)'
      #     scriptType: 'bash'
      #     scriptLocation: 'inlineScript'
      #     inlineScript: 'echo $(System.AccessToken) | az devops login'

      # - task: AzureCLI@2
      #   inputs:
      #     azureSubscription: 'drobbins-shg-manjsin (a6ec3340-794a-4552-9c76-a5c37e3d0c2b)'
      #     scriptType: 'pscore'
      #     scriptLocation: 'inlineScript'
      #     inlineScript: 'echo $(System.AccessToken) | az devops login'


      - script: pip install --upgrade pip --target /opt/az/lib/python3.6/site-packages/
      # - bash: |
      #      echo $(System.AccessToken) | az pipelines create --name 'TrivyScanner' --description 'Pipeline for Trivy Scan' --organization 'https://dev.azure.com/manjitsin' --project 'devops-practice' --repository checkov-demo --branch demo --repository-type github --yml-path trivyy.yml --service-connection 'manjitsin' --skip-first-run true
      #   displayName: 'Show build list and PRs'
      #   env:
      #     AZURE_DEVOPS_EXT_PAT: $(System.AccessToken)

      - script: echo $(System.AccessToken) | az devops login
        env:
          AZURE_DEVOPS_EXT_PAT: $(System.AccessToken)
      - task: Bash@3
        displayName: "Validate packaging"
        inputs:
          targetType: 'inline'
          script: |
            # run tests
            az extension add --name azure-devops
            echo $AZURE_DEVOPS_EXT_PAT | az devops login --organization https://dev.azure.com/manjitsin/
            az devops configure --defaults organization=https://dev.azure.com/$AZURE_DEVOPS_ORG project=$AZURE_DEVOPS_PROJECT
